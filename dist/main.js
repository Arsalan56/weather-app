(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var A=t(537),r=t.n(A),o=t(645),a=t.n(o)()(r());a.push([n.id,"/* Meyer's reset */\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* Meyer's reset end */\n\nhtml,\nbody {\n    height: 100%;\n    width: 100%;\n}\n\nbody {\n    display: grid;\n    grid-template-rows: min-content 1fr;\n    --bg: #d8f3dc;\n    --theme-1: #95d5b2;\n    --theme-2: #52b788;\n    --text-theme: #1b4332;\n    background: var(--bg);\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\n        'Lucida Sans', Arial, sans-serif;\n}\n\nheader {\n    background: #b7e4c7;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 6px 15px;\n    min-height: 5%;\n    font-size: 16px;\n    padding-top: 0px;\n    border-bottom: 2px solid var(--theme-2);\n}\n\nheader input {\n    border: 0px;\n    /* color: white; */\n    width: clamp(100px, 40vw, 250px);\n    font-size: 1.1em;\n    text-align: center;\n    padding: 0px;\n    outline: none;\n    background: none;\n    filter: grayscale(100%);\n    background: none;\n    color: var(--text-theme);\n}\n\nheader > div {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\nheader img {\n    --size: 50px;\n\n    height: var(--size);\n    width: var(--size);\n}\n\nform > button {\n    border: 0px;\n    background: none;\n    font-size: 1.1em;\n    color: var(--text-theme);\n    border-left: 2px solid var(--theme-2);\n}\n\nform {\n    display: flex;\n    background: var(--theme-1);\n    border-radius: 5px;\n    padding: 0px 4px;\n    height: 25px;\n    border: 2px solid var(--theme-2);\n}\n\n.tempmode {\n    background: #dee2e6;\n    font-size: 1.1em;\n    background: var(--theme-1);\n    border: 2px solid var(--theme-2);\n    border-radius: 5px;\n    color: var(--text-theme);\n}\n\n.search {\n    display: grid;\n    grid-template: 1fr 1em / 1fr;\n    gap: 2px;\n    align-self: last baseline;\n}\n\n.error-msg {\n    font-size: 0.8em;\n    padding-left: 4px;\n    color: red;\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n.castCont {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.location {\n    flex-grow: 1;\n    min-width: 250px;\n    padding-top: 10px;\n}\n\n.hourlyCast {\n    flex-grow: 4;\n    min-width: 400px;\n}\n\n/* location style */\n\n.location h2,\n.location h1,\n.location p {\n    text-align: center;\n}\n\n.location {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    box-sizing: border-box;\n}\n\n.location > h2 {\n    margin-bottom: 10px;\n}\n.location > h1 {\n    margin: 25px 0px;\n}\n.location > div {\n    display: flex;\n    flex-direction: column;\n}\n.location h2 {\n    font-size: 2.5em;\n}\n\n.location h1 {\n    font-size: 5em;\n}\n\nmain > p:first-of-type {\n    text-align: center;\n}\n\n.dailyCast {\n    grid-column: 1 / -1;\n}\n\n/* Hourly forecast */\n\n.hourlyCast {\n    display: flex;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n    align-items: center;\n    padding: 0px 25px;\n    align-self: center;\n    height: min-content;\n}\n\n.hourlyCast > div {\n    display: flex;\n    flex-grow: 1;\n    background: var(--theme-1);\n    border: 2px solid var(--theme-2);\n    border-radius: 20px;\n    gap: 10px;\n    font-size: 1.2em;\n    flex-wrap: wrap;\n}\n.hourlyCast > div > div {\n    height: 150px;\n    padding: 5px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    align-items: center;\n}\n\n.hourlyCast > div > div > p:first-of-type,\n.hourlyCast img {\n    grid-column: 1 / -1;\n    justify-self: center;\n}\n.hourlyCast img {\n    height: 50px;\n    width: 50px;\n    justify-self: center;\n}\n\n/* daily forecast */\n\n.dailyCast {\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    padding: 0px 50px;\n}\n\n.dailyCont {\n    background: var(--theme-2);\n    border: 2px solid var(--theme-2);\n    display: flex;\n    /* padding: 5px; */\n    border-radius: 10px;\n    width: 100%;\n    justify-content: center;\n    gap: 2px;\n    flex-wrap: wrap;\n}\n.dailyCont > div {\n    flex-grow: 1;\n    display: flex;\n    padding: 4px;\n    background: var(--theme-1);\n    flex-direction: column;\n    gap: 12px;\n    align-items: center;\n}\n\n.dailyCast img {\n    height: 100px;\n    width: 100px;\n}\n.dailyTemp {\n    font-size: 1.3em;\n}\n\n.dailyCont p:first-of-type {\n    margin-top: 10px;\n}\n\n.dailyCont p:last-of-type {\n    margin-bottom: 10px;\n}\n\n/* https://coolors.co/palette/d8f3dc-b7e4c7-95d5b2-74c69d-52b788-40916c-2d6a4f-1b4332-081c15 */\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,kBAAkB;AAClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiFI,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,wBAAwB;AAC5B;AACA,gDAAgD;AAChD;;;;;;;;;;;IAWI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,gBAAgB;AACpB;AACA;;IAEI,YAAY;AAChB;AACA;;;;IAII,WAAW;IACX,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,iBAAiB;AACrB;AACA,sBAAsB;;AAEtB;;IAEI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mCAAmC;IACnC,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,qBAAqB;IACrB;wCACoC;AACxC;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,iBAAiB;IACjB,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,gCAAgC;IAChC,gBAAgB;IAChB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,gBAAgB;IAChB,uBAAuB;IACvB,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,YAAY;;IAEZ,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,wBAAwB;IACxB,qCAAqC;AACzC;;AAEA;IACI,aAAa;IACb,0BAA0B;IAC1B,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,gCAAgC;AACpC;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,0BAA0B;IAC1B,gCAAgC;IAChC,kBAAkB;IAClB,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,4BAA4B;IAC5B,QAAQ;IACR,yBAAyB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA,mBAAmB;;AAEnB;;;IAGI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,mBAAmB;AACvB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA,oBAAoB;;AAEpB;IACI,aAAa;IACb,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,sBAAsB;IACtB,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,0BAA0B;IAC1B,gCAAgC;IAChC,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,eAAe;AACnB;AACA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,6BAA6B;IAC7B,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;;IAEI,mBAAmB;IACnB,oBAAoB;AACxB;AACA;IACI,YAAY;IACZ,WAAW;IACX,oBAAoB;AACxB;;AAEA,mBAAmB;;AAEnB;IACI,aAAa;IACb,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,0BAA0B;IAC1B,gCAAgC;IAChC,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,WAAW;IACX,uBAAuB;IACvB,QAAQ;IACR,eAAe;AACnB;AACA;IACI,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,0BAA0B;IAC1B,sBAAsB;IACtB,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;AACA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA,8FAA8F",sourcesContent:["/* Meyer's reset */\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* Meyer's reset end */\n\nhtml,\nbody {\n    height: 100%;\n    width: 100%;\n}\n\nbody {\n    display: grid;\n    grid-template-rows: min-content 1fr;\n    --bg: #d8f3dc;\n    --theme-1: #95d5b2;\n    --theme-2: #52b788;\n    --text-theme: #1b4332;\n    background: var(--bg);\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\n        'Lucida Sans', Arial, sans-serif;\n}\n\nheader {\n    background: #b7e4c7;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 6px 15px;\n    min-height: 5%;\n    font-size: 16px;\n    padding-top: 0px;\n    border-bottom: 2px solid var(--theme-2);\n}\n\nheader input {\n    border: 0px;\n    /* color: white; */\n    width: clamp(100px, 40vw, 250px);\n    font-size: 1.1em;\n    text-align: center;\n    padding: 0px;\n    outline: none;\n    background: none;\n    filter: grayscale(100%);\n    background: none;\n    color: var(--text-theme);\n}\n\nheader > div {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\nheader img {\n    --size: 50px;\n\n    height: var(--size);\n    width: var(--size);\n}\n\nform > button {\n    border: 0px;\n    background: none;\n    font-size: 1.1em;\n    color: var(--text-theme);\n    border-left: 2px solid var(--theme-2);\n}\n\nform {\n    display: flex;\n    background: var(--theme-1);\n    border-radius: 5px;\n    padding: 0px 4px;\n    height: 25px;\n    border: 2px solid var(--theme-2);\n}\n\n.tempmode {\n    background: #dee2e6;\n    font-size: 1.1em;\n    background: var(--theme-1);\n    border: 2px solid var(--theme-2);\n    border-radius: 5px;\n    color: var(--text-theme);\n}\n\n.search {\n    display: grid;\n    grid-template: 1fr 1em / 1fr;\n    gap: 2px;\n    align-self: last baseline;\n}\n\n.error-msg {\n    font-size: 0.8em;\n    padding-left: 4px;\n    color: red;\n}\n\nmain {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n}\n\n.castCont {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.location {\n    flex-grow: 1;\n    min-width: 250px;\n    padding-top: 10px;\n}\n\n.hourlyCast {\n    flex-grow: 4;\n    min-width: 400px;\n}\n\n/* location style */\n\n.location h2,\n.location h1,\n.location p {\n    text-align: center;\n}\n\n.location {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    box-sizing: border-box;\n}\n\n.location > h2 {\n    margin-bottom: 10px;\n}\n.location > h1 {\n    margin: 25px 0px;\n}\n.location > div {\n    display: flex;\n    flex-direction: column;\n}\n.location h2 {\n    font-size: 2.5em;\n}\n\n.location h1 {\n    font-size: 5em;\n}\n\nmain > p:first-of-type {\n    text-align: center;\n}\n\n.dailyCast {\n    grid-column: 1 / -1;\n}\n\n/* Hourly forecast */\n\n.hourlyCast {\n    display: flex;\n    gap: 5px;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n    align-items: center;\n    padding: 0px 25px;\n    align-self: center;\n    height: min-content;\n}\n\n.hourlyCast > div {\n    display: flex;\n    flex-grow: 1;\n    background: var(--theme-1);\n    border: 2px solid var(--theme-2);\n    border-radius: 20px;\n    gap: 10px;\n    font-size: 1.2em;\n    flex-wrap: wrap;\n}\n.hourlyCast > div > div {\n    height: 150px;\n    padding: 5px;\n    flex-grow: 1;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n    align-items: center;\n}\n\n.hourlyCast > div > div > p:first-of-type,\n.hourlyCast img {\n    grid-column: 1 / -1;\n    justify-self: center;\n}\n.hourlyCast img {\n    height: 50px;\n    width: 50px;\n    justify-self: center;\n}\n\n/* daily forecast */\n\n.dailyCast {\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    padding: 0px 50px;\n}\n\n.dailyCont {\n    background: var(--theme-2);\n    border: 2px solid var(--theme-2);\n    display: flex;\n    /* padding: 5px; */\n    border-radius: 10px;\n    width: 100%;\n    justify-content: center;\n    gap: 2px;\n    flex-wrap: wrap;\n}\n.dailyCont > div {\n    flex-grow: 1;\n    display: flex;\n    padding: 4px;\n    background: var(--theme-1);\n    flex-direction: column;\n    gap: 12px;\n    align-items: center;\n}\n\n.dailyCast img {\n    height: 100px;\n    width: 100px;\n}\n.dailyTemp {\n    font-size: 1.3em;\n}\n\n.dailyCont p:first-of-type {\n    margin-top: 10px;\n}\n\n.dailyCont p:last-of-type {\n    margin-bottom: 10px;\n}\n\n/* https://coolors.co/palette/d8f3dc-b7e4c7-95d5b2-74c69d-52b788-40916c-2d6a4f-1b4332-081c15 */\n"],sourceRoot:""}]);const i=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",A=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),A&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),A&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,A,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(A)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);A&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),o="/*# ".concat(r," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,A=0;A<e.length;A++)if(e[A].identifier===n){t=A;break}return t}function A(n,A){for(var o={},a=[],i=0;i<n.length;i++){var s=n[i],l=A.base?s[0]+A.base:s[0],d=o[l]||0,c="".concat(l," ").concat(d);o[l]=d+1;var p=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=r(u,A);A.byIndex=i,e.splice(i,0,{identifier:c,updater:C,references:1})}a.push(c)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=A(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var i=t(o[a]);e[i].references--}for(var s=A(n,r),l=0;l<o.length;l++){var d=t(o[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var A=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,r&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(A,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(A){var r=e[A];if(void 0!==r)return r.exports;var o=e[A]={id:A,exports:{}};return n[A](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var A=e.getElementsByTagName("script");if(A.length)for(var r=A.length-1;r>-1&&!n;)n=A[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),A=t(795),r=t.n(A),o=t(569),a=t.n(o),i=t(565),s=t.n(i),l=t(216),d=t.n(l),c=t(589),p=t.n(c),u=t(426),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=a().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=d(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals,t.p;const f=document.querySelector(".error-msg");document.querySelector("form").addEventListener("submit",(async n=>{n.preventDefault();const e=await async function(n){return fetch(`https://api.weatherapi.com/v1/search.json?key=4377390ce908483ab8510059232409&q=${n}`,{mode:"cors"}).then((n=>n.json())).then((async e=>{if(0===e.length)throw new Error("Location not found");return f.textContent="",fetch(`https://api.weatherapi.com/v1/forecast.json?key=4377390ce908483ab8510059232409&q=${n}`,{mode:"cors"}).then((n=>n.json())).then((n=>n)).catch((n=>{f.textContent=n}))})).catch((n=>{f.textContent=n}))}(document.querySelector("input").value);document.querySelector(".hourlyCast>div>img").setAttribute("src",e.forecast.forecastday[0].hour[8].condition.icon)})),addEventListener("resize",(()=>{console.log("o")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,